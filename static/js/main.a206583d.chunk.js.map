{"version":3,"sources":["../../src/index.tsx","App.js","index.js"],"names":["onHammer","second","isMouseDown","setMouseDown","isLongPress","setLongPress","handleDown","handleUp","setTimeout","clearTimeout","App","useState","draggable","setDraggable","useCallback","handleDragEnd","hammerUp","useHammer","hammerDown","className","onMouseDown","onMouseUp","onDragEnd","ReactDOM","render","document","getElementById"],"mappings":"gNAOkB,SAAC,G,IAAEA,EAAA,EAAAA,SAAU,IAAAC,cAAA,IAAS,EAAT,MACvB,yBAACC,EAAA,KAAaC,EAAA,KACd,yBAACC,EAAA,KAAaC,EAAA,KAEdC,EAAa,uBAAY,WAC7BH,GAAa,KACZ,CAACD,IAEEK,EAAW,uBAAY,WAC3BJ,GAAa,GACbE,GAAa,KACZ,CAACH,IAsBJ,OApBA,qBAAU,WACR,GAAIA,EAAa,CACf,IAAM,EAAQM,YAAW,WACvBH,GAAa,KACZJ,GAEH,OAAO,WACLQ,aAAa,OAKhB,CAACP,IAEJ,qBAAU,WACJE,GACFJ,MAED,CAACI,IAEG,CAACE,EAAYC,ICbPG,EAxBH,WAAO,IAAD,EACkBC,oBAAS,GAD3B,mBACTC,EADS,KACEC,EADF,KAEVb,EAAWc,uBAAY,WAC3BD,GAAa,KACZ,IAEGE,EAAgBD,uBAAY,WAChCE,IACAH,GAAa,MARC,EAWeI,EAAU,CAAEjB,aAX3B,mBAWTkB,EAXS,KAWGF,EAXH,KAYhB,OACE,yBACEG,UAAW,aACXP,UAAWA,EACXQ,YAAa,kBAAMF,KACnBG,UAAW,kBAAML,KACjBM,UAAW,kBAAMP,MALnB,oDAOgDH,KCjBpDW,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.a206583d.chunk.js","sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\n\ninterface Props {\n  onHammer: Function;\n  second?: number;\n}\n\nconst useHammer = ({ onHammer, second = 700 }: Props) => {\n  const [isMouseDown, setMouseDown] = useState(false);\n  const [isLongPress, setLongPress] = useState(false);\n\n  const handleDown = useCallback(() => {\n    setMouseDown(true);\n  }, [isMouseDown]);\n\n  const handleUp = useCallback(() => {\n    setMouseDown(false);\n    setLongPress(false);\n  }, [isMouseDown]);\n\n  useEffect(() => {\n    if (isMouseDown) {\n      const timer = setTimeout(() => {\n        setLongPress(true);\n      }, second);\n\n      return () => {\n        clearTimeout(timer);\n      };\n    }\n\n    return;\n  }, [isMouseDown]);\n\n  useEffect(() => {\n    if (isLongPress) {\n      onHammer();\n    }\n  }, [isLongPress]);\n\n  return [handleDown, handleUp];\n};\n\nexport default useHammer;\n","import React, { useState, useCallback } from 'react'\nimport useHammer from 'use-hammer'\n\nconst App = () => {\n  const [draggable, setDraggable] = useState(false)\n  const onHammer = useCallback(() => {\n    setDraggable(true)\n  }, [])\n\n  const handleDragEnd = useCallback(() => {\n    hammerUp()\n    setDraggable(false)\n  })\n\n  const [hammerDown, hammerUp] = useHammer({ onHammer })\n  return (\n    <div\n      className={\"sample-div\"}\n      draggable={draggable}\n      onMouseDown={() => hammerDown()}\n      onMouseUp={() => hammerUp()}\n      onDragEnd={() => handleDragEnd()}\n      >\n      {`Please Long Press for 700ms / Draggable : ${draggable}`}\n    </div>\n  )\n}\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}